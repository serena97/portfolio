@import './shared';

.landing {
    padding-top: 0;
}

.navigation {
    font-size: $font-size-m;
    
    // desktop
    // &__item {
    //     padding: $nav-item-padding;
    //     display: inline-block;
    //     transition: all .4s;

    //     &:hover {
    //         -webkit-transform: translateY(-1rem);
    //         transform: translateY(-1rem);
    //         cursor: pointer;
    //     }

    //     &:hover .navigation__link {
    //         background-position: 100%;
    //     }

    //     @keyframes customwidth {
    //         0% {
    //             width: 0%;
    //         }

    //         100% {
    //             width: 100%;
    //         }
    //     }

    //     &:hover .navigation__link::after {
    //         content: '';
    //         display: block;
    //         margin-top: 10px;
    //         height: 3px;
    //         background: $color-line;
    //         animation: customwidth .5s;
    //     }
    // }

    // & .navigation__link {
    //     color: $color-text;
    //     text-decoration: none;
        
    //     &:link,
    //     &:visited {
    //         background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-serena 50%);
    //         background-size: 250%;
    //         transition: all .5s;
    //     }

    //     &:hover,
    //     &:active {
    //         background-position: 100%;
    //         -webkit-transform: translateY(-1rem);
    //         transform: translateY(-1rem);
    //     }

    //     &--active {
    //         background-color: $color-serena;
    //     }

    //     &--active::after {
    //         content: '';
    //         display: block;
    //         margin-top: 10px;
    //         height: 3px;
    //         background: $color-line;
    //     }
    // }

    // & .logo {
    //     font-weight: 700;
    //     padding-top: 2.5rem;
    //     // margin-top: calc($nav-item-padding / 2);
    //     // float: right;
    //     & a {
    //         text-decoration: none;
    //         color: black;
    //         background-color: $color-secondary-text;
    //     }

    //     // & .icon {
    //     //     font-size: 3rem;
    //     // }
    // }

    .mob-icon {
        position: fixed;
        top: 0;
        right: 0;
        z-index: $z-index-icon;
        cursor: pointer;

        & object {
            pointer-events: none;
        }
    }

    .background {
        display: none;
        flex-direction: column;
        justify-content: space-around;
        height: 100%;
        width: 100%;
        position: fixed;
        top: 0px;
        left: 0px;
    
        &__block {
            background: rgba(25, 25, 25, 0.6);
            text-align: center;
            margin-left: 1.6rem;
            margin-right: 1.6rem;
            font-size: $font-size-l;
            padding: 1rem 2rem 1rem 2rem;
            border: $color-layout 3px solid;
            border-radius: $border-radius;
            cursor: pointer;
    
            @include hover;
            & span {
                float: right;
            }
        }
    }

    .background a {
        text-decoration: none;
        color: $color-text;
        z-index: $z-index-mob-menu + 1;
    }
    
    .checked + .background {
        display: flex;
        z-index: $z-index-mob-menu;
        overflow: hidden;
        background: $color-background;
        font-size: 52px;
        animation: slide-in 0.5s forwards;
    }
    
    .background.closing {
        animation: slide-out 0.5s forwards;
    }
    
    // adapted from https://codepen.io/hylobates-lar/pen/bGEQXgm
    @mixin dots($count) {
        $text-shadow: ();
        $colors: $color-secondary-text, $color-layout, $color-serena, $color-line;
        @for $i from 0 through $count {
          $text-shadow: $text-shadow,
                       (-.5+(random()) * 3) + em
                       (-.5+(random()) * 3) + em
                       7px
                       nth($colors, ($i % length($colors)) + 1)
        }
        text-shadow: $text-shadow;
    }
    
    .checked + .background::before, .checked + .background::after {
        position: fixed;
        top: 50%;
        left: 50%;
        width: 3em;
        height: 3em;
        content: '.';
        mix-blend-mode: screen;
        animation: 44s -27s move infinite ease-in-out alternate;
    }
    
    .checked + .background::before {
        @include dots(40);
        animation-duration: 44s;
        animation-delay: -27s;
    }
    
    .checked + .background::after {
        @include dots(40);
        animation-duration: 43s;
        animation-delay: -32s;
    }
    
    @keyframes move {
        from {
            transform: rotate(0deg) scale(12) translateX(-20px);
        }
        to {
            transform: rotate(360deg) scale(18) translateX(20px);
        }
    }
    
    
}

